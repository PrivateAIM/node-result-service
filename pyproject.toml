[project]
name = "flame-result-service"
version = "0.1.3"
description = "Service for handling intermediate files and submitting result files to the FLAME Hub."
authors = [
    {name = "Maximilian Jugl", email="Maximilian.Jugl@medizin.uni-leipzig.de"}
]
readme = "README.md"
requires-python = ">=3.10,<4"
dependencies = [
    "minio (>=7.2.0,<8)",
    "fastapi[standard] (>=0.115.0,<1)",
    "pydantic-settings (>=2.7.0,<3)",
    "python-multipart (>=0.0.20,<1)",
    "jwcrypto (>=1.5.0,<2)",
    "tomli (>=2.2.0,<3)",
    "peewee (>=3.17.0,<4)",
    "psycopg2-binary (>=2.9.0,<3)",
    "cryptography (>=44.0.0,<45)",
    "flame-hub-client (>=0.2.0)",
    "truststore (>=0.10.1,<1)",
    "opendp (>=0.12.1,<0.13.0)",
]
license = "Apache-2.0"

[project.scripts]
flame-result = "project.main:run_server"

[tool.poetry]
packages = [{ include = "project" }]

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.0"
ruff = ">=0.9.0"
pre-commit = ">=4.0.0"
pytest-dotenv = ">=0.5.0"
testcontainers = {extras = ["postgres"], version = ">=4.9.0"}

[tool.ruff]
line-length = 120

[tool.pytest.ini_options]
markers = [
    "live: mark an integration test that runs against live infra."
]
env_files = [
    ".env",
    ".env.test"
]
addopts = "-m \"not live\""

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
